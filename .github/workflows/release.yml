name: Release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag Git (v3.0.7, v4.0.0, etc.). Laisser vide pour utiliser la version du package.json"
        required: false
        type: string

permissions:
  contents: write

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true

env:
  CSC_IDENTITY_AUTO_DISCOVERY: "false" # Empêche electron-builder de chercher un certificat macOS

jobs:
  build-and-publish:
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # récupère aussi les tags pour electron-builder

      - name: Setup Node 20 + cache npm
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: "npm"
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Build / Release avec electron-builder
        uses: samuelmeuli/action-electron-builder@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          args: ${{ matrix.os == 'windows-latest' && 'nsis --x64 --publish always' || 'dmg --x64 --arm64 --publish always' }}

      - name: Upload des artefacts (facultatif)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: "packages-${{ runner.os }}"
          path: |
            release/*.dmg
            release/*.exe 